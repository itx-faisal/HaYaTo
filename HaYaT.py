# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Jan 13 16:32:17 2023
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))